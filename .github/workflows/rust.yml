name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: |
            x86_64-unknown-linux-gnu
            x86_64-pc-windows-msvc
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Build
        run: cargo build --release --target ${{ matrix.platform }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: twitch_recover_v3_continued-${{ matrix.platform }}
          path: target/${{ matrix.platform }}/release/twitch_recover_v3_continued

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: twitch_recover_v3_continued-ubuntu-latest
          path: build/linux
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: twitch_recover_v3_continued-windows-latest
          path: build/windows

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux build to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/linux/twitch_recover_v3_continued
          asset_name: twitch_recover_v3_continued-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows build to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/twitch_recover_v3_continued.exe
          asset_name: twitch_recover_v3_continued-windows.exe
          asset_content_type: application/octet-stream
